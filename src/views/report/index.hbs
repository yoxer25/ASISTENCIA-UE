<!-- Content page-->
<section class="full-box dashboard-contentPage">
    {{>navigation/navbar}}
    </nav>
    <!-- Content page -->
    <div class="container-fluid">
        <div class="page-header">
            <h1 class="text-titles"><i class="zmdi zmdi-assignment zmdi-hc-fw"></i> Reportes
                <small>Listado</small>
            </h1>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row" style="margin-bottom: 20px;">
            <div class="col-lg-6">
                <a href="/attendanceRecords/importData"><button class="btn btn-raised btn-sm"
                        style="background-color: #01579B;">
                        <p style="font-size: 15px; margin: auto; color: #fff;"><i class="zmdi zmdi-upload"></i> Importar
                            Excel</p>
                    </button></a>
            </div>
            <div class="col-lg-6" style="text-align: right;">
                <form action="/reports/download" method="POST" id="downloadForm">
                    <input class="form-control" type="hidden" id="ie" name="ie" value="{{ie}}">
                    <input type="hidden" id="option" name="option" value="{{option}}">
                    <input class="form-control" type="hidden" id="username" name="username" value="{{username}}">
                    <input class="form-control" type="hidden" id="startDate" name="startDate" value="{{startDate}}">
                    <input class="form-control" type="hidden" id="endDate" name="endDate" value="{{endDate}}">

                </form>
                <a id="enlaceDownload" href="#" onclick="enviar_formulario_download(); return false;"><button
                        class="btn btn-raised btn-sm" style="background-color: #01579B;">
                        <p style="font-size: 15px; margin: auto; color: #fff;"><i class="zmdi zmdi-download"></i>
                            Descargar Reporte</p>
                    </button></a>
            </div>
        </div>
        <div class="row" style="margin-bottom: 20px;">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body rounded-bottom bg-white">
                        <form action="/reports" method="POST" id="consultForm">
                            {{>consultaFechas/frm}}
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="card table-wrapper">
                    <div class="card-body rounded-bottom bg-white p-5">
                        <table class="table table-hover text-center">
                            <thead>
                                <tr>
                                    <th class="text-center">DNI</th>
                                    <th class="text-center">Nombres y Apellidos</th>
                                    <th class="text-center">Fecha Registro</th>
                                    <th class="text-center">Primera Entrada</th>
                                    <th class="text-center">Primera Salida</th>
                                    {{#if (eq turno "ue")}}
                                    <th class="text-center">Segunda Entrada</th>
                                    <th class="text-center">Segunda Salida</th>
                                    {{/if}}
                                    <th class="text-center">Tiempo no trabajado</th>
                                    <th class="text-center">Observaciones</th>
                                    <th class="text-center">Eliminar</th>
                                </tr>
                            </thead>
                            <tbody id="list">
                                <tr>
                                    <td colspan="10">No hay registros para mostrar</td>
                                </tr>
                            </tbody>
                        </table>
                        <ul class="pagination pagination-sm" id="pagination">
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {{>footer/footer}}
</section>

{{>navigation/navigation}}

<script src="/js/functions.js"></script>

<script>
    const listRecords = ({{{ convertJson attendanceRecord }}});
    const turno = ({{{ convertJson turno }}});

    const convertirATotalMinutos = (tiempo) => {
        if (tiempo !== null) {
            let [horas, minutos, segundos] = tiempo.split(':').map(Number);
            let totalSegundos = horas * 3600 + minutos * 60 + segundos;
            let totalMinutos = totalSegundos / 60;
            return totalMinutos;
        } else {
            return null;
        }
    };

    const tableRecord = (lista) => {
        // si dato.nombreTurno === "ue"
        let horaEntrada = convertirATotalMinutos("08:00:00"); // 480
        let horaSalida = convertirATotalMinutos("13:00:00"); // 780
        let horaEntrada2 = convertirATotalMinutos("14:15:00"); // 855
        let horaSalida2 = convertirATotalMinutos("17:00:00"); // 1020

        let stringTable = '';
        for (const dato of lista) {
            if (dato.nombreTurno === "jec") {
                horaEntrada = convertirATotalMinutos("08:00:00") // 480
                horaSalida = convertirATotalMinutos("15:30:00") // 930
            } if (dato.nombreTurno === "ceba") {
                horaEntrada = convertirATotalMinutos("18:00:00") // 1080
                horaSalida = convertirATotalMinutos("23:00:00") // 1380
            } if (dato.nombreTurno === "tarde") {
                horaEntrada = convertirATotalMinutos("13:00:00") // 780
                horaSalida = convertirATotalMinutos("18:00:00") //1080
            } if (dato.nombreTurno === "jer") {
                horaEntrada = convertirATotalMinutos("08:00:00") // 480
                horaSalida = convertirATotalMinutos("13:45:00") // 825
            } if (dato.nombreTurno === "mañana") {
                horaEntrada = convertirATotalMinutos("08:00:00") // 480
                horaSalida = convertirATotalMinutos("13:00:00") // 780
            }
            let minutosPrimeraEntrada = convertirATotalMinutos(dato.primeraEntrada);
            let minustosPrimeraSalida = convertirATotalMinutos(dato.primeraSalida);
            let minustosSegundaEntrada = convertirATotalMinutos(dato.segundaEntrada);
            let minustosSegundaSalida = convertirATotalMinutos(dato.segundaSalida);

            if (minutosPrimeraEntrada === null || minutosPrimeraEntrada <= horaEntrada) {
                minutosPrimeraEntrada = 0;
            }
            if (minustosPrimeraSalida === null || minustosPrimeraSalida > horaSalida) {
                minustosPrimeraSalida = 0;
            }
            if (minustosSegundaEntrada === null || minustosSegundaEntrada <= horaEntrada2) {
                minustosSegundaEntrada = 0;
            }
            if (minustosSegundaSalida === null || minustosSegundaSalida > horaSalida2) {
                minustosSegundaSalida = 0;
            }
            let primeraTardanza = minutosPrimeraEntrada - horaEntrada;
            let segundaTardanza = minustosSegundaEntrada - horaEntrada2;
            let primeraFalta = horaSalida - minustosPrimeraSalida;
            let segundaFalta = horaSalida2 - minustosSegundaSalida;

            if (minutosPrimeraEntrada <= 0) {
                primeraTardanza = 0;
            }
            if (minustosPrimeraSalida <= 0) {
                primeraFalta = 0;
            }
            if (minustosSegundaEntrada <= 0) {
                segundaTardanza = 0;
            }
            if (minustosSegundaSalida <= 0) {
                segundaFalta = 0;
            }

            let message = "";
            if (dato.nombreTurno === "ue") {
                if (dato.primeraEntrada === null || dato.primeraSalida === null || dato.segundaEntrada === null || dato.segundaSalida === null) {
                    message = "Tiene horas sin marcar";
                }
            } else {
                if (dato.primeraEntrada === null || dato.primeraSalida === null) {
                    message = "Tiene horas sin marcar";
                }
            }

            let fechaISO = dato.fechaRegistro;
            let date = new Date(fechaISO);

            let year = date.getFullYear();
            let month = String(date.getMonth() + 1).padStart(2, '0'); // Los meses en JavaScript son base 0
            let day = String(date.getDate()).padStart(2, '0');

            let fechaFormateada = `${year}-${month}-${day}`;

            const fechaCreado = dato.fechaCreado;

            let fila = `<tbody><tr scope="col" data-fecha="${fechaCreado}"><td>`;
            fila += dato.dniPersonal;
            fila += "</td>";
            fila += "<td>";
            fila += dato.nombrePersonal;
            fila += "</td>";
            fila += "<td>";
            fila += fechaFormateada;
            fila += "</td>";
            fila += "<td>";
            if (dato.primeraEntrada !== null) {
                fila += dato.primeraEntrada;
            } else {
                fila += "no marcó";
            }
            fila += "</td>";
            fila += "<td>";
            if (dato.primeraSalida !== null) {
                fila += dato.primeraSalida;
            } else {
                fila += "no marcó";
            }
            fila += "</td>";
            if (turno === "ue") {
                fila += "<td>";
                if (dato.segundaEntrada !== null) {
                    fila += dato.segundaEntrada;
                } else {
                    fila += "no marcó";
                }
                fila += "</td>";
                fila += "<td>";
                if (dato.segundaSalida !== null) {
                    fila += dato.segundaSalida;
                } else {
                    fila += "no marcó";
                }
                fila += "</td>";
            }
            fila += "<td>";
            const minNoTrabajados = primeraTardanza + primeraFalta + segundaTardanza + segundaFalta;

            // Convertir minutos en horas y minutos (si supera los 59 minutos)
            const hrs = Math.floor(minNoTrabajados / 60);
            const minutosRestantes = minNoTrabajados % 60;


            // Mostrar las horas y minutos correctamente si hay más de 0 minutos
            if (hrs > 0) {
                fila += `${hrs} horas y ${Math.floor(minutosRestantes)} minutos`;
            } else {
                fila += `${Math.floor(minutosRestantes)} minutos`;

            }
            fila += "</td>";
            fila += "<td>";
            fila += message;
            fila += "</td>";
            fila += "<td>";
            fila += `<a href="#!" id="myButton" class="btn-delete-attendanceRecord btn btn-danger btn-raised btn-xs" data-id="${dato.idRegistroAsistencia}" data-personal="${dato.idPersonal}" data-institucion="${dato.idInstitucion}"><i class="zmdi zmdi-delete"></i></a>`;
            fila += "</td>"
            fila += "</tr></tbody>";
            stringTable += fila;
        }
        return stringTable;
    };
    document.getElementById("list").innerHTML =
        tableRecord(listRecords);


    const current = ({{{ convertJson current }}});
    const pages = ({{{ convertJson pages }}});
    const option = ({{{ convertJson option }}});

    const numPages = (num) => {
        let navPages = '';

        if (num) {
            let i = (Number(current) > 5 ? Number(current) - 4 : 1);
            for (; i <= (Number(current) + 4) && i <= num; i++) {
                let fila = '<ul class="pagination pagination-sm" id="pagination">';
                if (i == current) {
                    fila += '<li class="active">';
                } else {
                    fila += '<li>';
                }
                if (i === Number(current) - 4 && i < num) {
                    fila += `<a href="#">...</a>`;
                }
                if (i === Number(current) + 4 && i < num) {
                    fila += `<a href="#">...</a>`;
                }
                if (option !== null) {
                    fila += `<a id="enlace href="#" onclick="enviar_formulario(${i}); return false;">${i}</a>`;
                } else {
                    fila += `<a href="/reports/page${i}">${i}</a>`;

                }
                fila += "</li></ul>";
                navPages += fila;
            }
        }
        return navPages
    }
    document.getElementById("pagination").innerHTML =
        numPages(pages);

    function enviar_formulario(i) {
        const page = document.getElementById("page")
        page.value = i;
        document.getElementById('consultForm').submit();
    }

    function enviar_formulario_download() {
        document.getElementById('downloadForm').submit();
    }

    document.querySelector(`#${option}`).checked = true;
</script>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const filas = document.querySelectorAll("#list tr");

        filas.forEach(fila => {
            const fechaRegistroStr = fila.getAttribute("data-fecha");
            if (fechaRegistroStr) {
                const fechaRegistro = new Date(fechaRegistroStr);
                const ahora = new Date();
                const diferenciaHoras = (ahora - fechaRegistro) / (1000 * 60 * 60); // Convertir ms a horas

                if (diferenciaHoras > 24) {
                    const botonEliminar = fila.querySelector(".btn-delete-attendanceRecord");
                    if (botonEliminar) {
                        botonEliminar.style.display = "none"; // Ocultar el botón
                    }
                }
            }
        });
    });
</script>